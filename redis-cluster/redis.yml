# helm repo add ot-helm https://ot-container-kit.github.io/helm-charts/
# helm install redis-operator ot-helm/redis-operator -n redis-operator --create-namespace

# Access Redis Write‑Enabled (full RW)
# redis://redis-replication-master.redis.svc.cluster.local:6379
# redis://:MyStrongRedisPass123@redis-replication-master.redis.svc.cluster.local:6379

# Access Redis Read‑Only (RO)
# redis://redis-replication-replica.redis.svc.cluster.local:6379
# redis://:MyStrongRedisPass123@redis-replication-replica.redis.svc.cluster.local:6379

# Access Redis Sentinel (SENTINEL)
# sentinel://redis-sentinel-sentinel.redis.svc.cluster.local:26379?master=myMaster
# sentinel://:MyStrongRedisPass123@redis-sentinel-sentinel.redis.svc.cluster.local:26379?master=myMaster

# ----------------------------------------------------
# 1. Namespace
# ----------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: redis

---
# ----------------------------------------------------
# 2. Secret: Redis password
# ----------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: redis
type: Opaque
data:
  password: "MyStrongRedisPass123"
stringData:
  password: "MyStrongRedisPass123"

---
# ----------------------------------------------------
# 3. ConfigMap: Redis additional configuration (HAVE A PROLEM, NOT AFFECTED REDIS CONFIGURATION)
# ----------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-external-config
  namespace: redis
data:
  redis-additional.conf: |
    requirepass MyStrongRedisPass123
    masterauth MyStrongRedisPass123
    maxmemory-policy allkeys-lru
    appendonly yes
    save 60 1000
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    databases 16
---
# ----------------------------------------------------
# 3. Redis Sentinel cluster definition
# ----------------------------------------------------
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisReplication
metadata:
  name: redis-replication
  namespace: redis
spec:
  clusterSize: 3      # 1 master + 2 replicas
  redisConfig: 
    additionalRedisConfig: redis-external-config
  kubernetesConfig:
    image: docker.arvancloud.ir/redis:6.2.6
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # redisSecret:
    #   name: redis-secret
    #   key: password
    resources:
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: "local-storage"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "2Gi"
  redisExporter:
    enabled: false
    image: quay.io/opstree/redis-exporter:v1.44.0
  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000

---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisSentinel
metadata:
  name: redis-sentinel
  namespace: redis
spec:
  clusterSize: 3
  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000
  redisSentinelConfig:
    redisReplicationName: redis-replication
    # redisReplicationPassword:
    #   secretKeyRef:
    #     name: redis-secret
    #     key: password
    quorum: "2"
    downAfterMilliseconds: "30000"
    failoverTimeout: "180000"
    parallelSyncs: "1"
    # additionalSentinelConfig: |
    #   sentinel resolve-hostnames yes
    #   sentinel announce-hostnames yes
  kubernetesConfig:
    image: quay.io/opstree/redis-sentinel:latest
    imagePullPolicy: IfNotPresent
    # redisSecret:
    #   name: redis-secret
    #   key: password
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"

---
# ----------------------------------------------------
# 4. LoadBalancer service for external Redis access
# ----------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-lb
  namespace: redis
  labels:
    app: redis-sentinel
spec:
  type: LoadBalancer
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector:
    app: redis-sentinel

---
# ----------------------------------------------------
# NodePort Service: external access for Redis master
# ----------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: redis-replication-nodeport
  namespace: redis
  labels:
    app: redis-replication
spec:
  type: NodePort
  ports:
    - name: redis
      port: 6379              # Logical service port
      targetPort: 6379        # Redis container port
      nodePort: 30379         # Fixed node port (any free port in 30000–32767)
  selector:
    app: redis-replication-master  # Must match labels of master pods

---
# ----------------------------------------------------
# NodePort Service: external access for Redis sentinel
# ----------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-nodeport
  namespace: redis
spec:
  type: NodePort
  ports:
    - port: 26379
      targetPort: 26379
      nodePort: 30380
  selector:
    app: redis-sentinel-sentinel
